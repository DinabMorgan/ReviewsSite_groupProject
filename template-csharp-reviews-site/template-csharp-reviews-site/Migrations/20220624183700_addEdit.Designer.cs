// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using template_csharp_reviews_site;

#nullable disable

namespace template_csharp_reviews_site.Migrations
{
    [DbContext(typeof(SupplyContext))]
    [Migration("20220624183700_addEdit")]
    partial class addEdit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("template_csharp_reviews_site.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opinions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Positive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Postdate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("SchoolSupplyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SchoolSupplyId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Thomas",
                            Opinions = "Very Sharp!",
                            Positive = true,
                            Postdate = new DateTime(2022, 6, 24, 14, 36, 59, 884, DateTimeKind.Local).AddTicks(4348),
                            Rating = 4,
                            SchoolSupplyId = 1
                        },
                        new
                        {
                            Id = 2,
                            Author = "Michael",
                            Opinions = "Very Cheap!",
                            Positive = false,
                            Postdate = new DateTime(2022, 6, 24, 14, 36, 59, 884, DateTimeKind.Local).AddTicks(4390),
                            Rating = 1,
                            SchoolSupplyId = 2
                        },
                        new
                        {
                            Id = 3,
                            Author = "Dina",
                            Opinions = "Strudy",
                            Positive = true,
                            Postdate = new DateTime(2022, 6, 24, 14, 36, 59, 884, DateTimeKind.Local).AddTicks(4392),
                            Rating = 5,
                            SchoolSupplyId = 3
                        },
                        new
                        {
                            Id = 4,
                            Author = "Michael",
                            Opinions = "Good Quality",
                            Positive = true,
                            Postdate = new DateTime(2022, 6, 24, 14, 36, 59, 884, DateTimeKind.Local).AddTicks(4394),
                            Rating = 5,
                            SchoolSupplyId = 4
                        },
                        new
                        {
                            Id = 5,
                            Author = "Dina",
                            Opinions = "Fantastic!!",
                            Positive = true,
                            Postdate = new DateTime(2022, 6, 24, 14, 36, 59, 884, DateTimeKind.Local).AddTicks(4397),
                            Rating = 5,
                            SchoolSupplyId = 5
                        });
                });

            modelBuilder.Entity("template_csharp_reviews_site.Models.SchoolSupply", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AgeGroup")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("SupplyType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SchoolSupplies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AgeGroup = 0,
                            Description = "Triangular and fun!",
                            Name = "Ticonderoga Pencil",
                            Price = 2.9900000000000002,
                            SupplyType = 0
                        },
                        new
                        {
                            Id = 2,
                            AgeGroup = 1,
                            Description = "Filled with ink!",
                            Name = "Bic Pen",
                            Price = 1.99,
                            SupplyType = 0
                        },
                        new
                        {
                            Id = 3,
                            AgeGroup = 2,
                            Description = "durable and indestructible",
                            Name = "5 star",
                            Price = 10.0,
                            SupplyType = 1
                        },
                        new
                        {
                            Id = 4,
                            AgeGroup = 3,
                            Description = "Calculator",
                            Name = "Texas Insturment",
                            Price = 200.0,
                            SupplyType = 2
                        },
                        new
                        {
                            Id = 5,
                            AgeGroup = 4,
                            Description = "Durable and strong",
                            Name = "LL Bean",
                            Price = 50.0,
                            SupplyType = 3
                        });
                });

            modelBuilder.Entity("template_csharp_reviews_site.Models.Review", b =>
                {
                    b.HasOne("template_csharp_reviews_site.Models.SchoolSupply", "SchoolSupply")
                        .WithMany("Reviews")
                        .HasForeignKey("SchoolSupplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchoolSupply");
                });

            modelBuilder.Entity("template_csharp_reviews_site.Models.SchoolSupply", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
